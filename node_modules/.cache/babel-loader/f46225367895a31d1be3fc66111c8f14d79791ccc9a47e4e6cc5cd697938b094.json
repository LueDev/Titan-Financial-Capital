{"ast":null,"code":"var _jsxFileName = \"/Users/luisjorge/code/Flatiron-Phase-2/16-Phase-2-Project/titan-capital-financial/src/components/YearlyFinancialChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Chart, registerables } from 'chart.js/auto';\nimport { format } from 'date-fns';\n\n// Register necessary plugins\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst YearlyFinancialChart = ({\n  transactions\n}) => {\n  _s();\n  const [chart, setChart] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [aggregatedData, setAggregatedData] = useState({\n    labels: [],\n    data: [],\n    minLoss: 0,\n    maxIncome: 0\n  });\n  useEffect(() => {\n    if (transactions.length > 0) {\n      const data = aggregateData(transactions);\n      setAggregatedData(data);\n    }\n  }, [transactions, selectedDate]);\n  useEffect(() => {\n    // Check if there's an existing chart\n    if (chart) {\n      // Destroy the existing chart\n      chart.destroy();\n    }\n    if (aggregatedData.labels.length > 0) {\n      const ctx = document.getElementById('yearlyFinancialChart').getContext('2d');\n      const newChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: aggregatedData.labels,\n          datasets: [{\n            label: 'Yearly Transactions',\n            data: aggregatedData.data,\n            backgroundColor: aggregatedData.data.map(amount => amount >= 0 ? 'rgba(75, 192, 192, 0.2)' : 'rgba(255, 99, 132, 0.2)'),\n            borderColor: aggregatedData.data.map(amount => amount >= 0 ? 'rgba(75, 192, 192, 1)' : 'rgba(255, 99, 132, 1)'),\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Year'\n              }\n            },\n            y: {\n              beginAtZero: true,\n              suggestedMin: aggregatedData.minLoss,\n              suggestedMax: aggregatedData.maxIncome,\n              title: {\n                display: true,\n                text: 'Transaction Amount'\n              }\n            }\n          }\n        }\n      });\n      setChart(newChart);\n    }\n  }, [aggregatedData]);\n  const aggregateData = data => {\n    const aggregatedByYear = data.reduce((result, transaction) => {\n      const date = new Date(transaction.timestamp);\n      const formattedYear = format(date, 'yyyy');\n      const existingIndex = result.labels.findIndex(label => label === formattedYear);\n      if (existingIndex !== -1) {\n        result.data[existingIndex] += transaction.amount;\n      } else {\n        result.labels.push(formattedYear);\n        result.data.push(transaction.amount);\n      }\n\n      // Update the maximum income and minimum loss\n      if (transaction.amount >= 0) {\n        result.maxIncome = Math.max(result.maxIncome, transaction.amount);\n      } else {\n        result.minLoss = Math.min(result.minLoss, transaction.amount);\n      }\n      return result;\n    }, {\n      labels: [],\n      data: [],\n      maxIncome: 0,\n      minLoss: 0\n    });\n    return aggregatedByYear;\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"financialChart\",\n    children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n      className: \"financialChart__datePicker\",\n      selected: selectedDate,\n      onChange: handleDateChange,\n      dateFormat: \"yyyy\",\n      showYearPicker: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"yearlyFinancialChart\",\n      width: \"800\",\n      height: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(YearlyFinancialChart, \"V/o9fovu0FTdoYbr4nqHCBU1VIo=\");\n_c = YearlyFinancialChart;\nexport default YearlyFinancialChart;\nvar _c;\n$RefreshReg$(_c, \"YearlyFinancialChart\");","map":{"version":3,"names":["React","useEffect","useState","DatePicker","Chart","registerables","format","jsxDEV","_jsxDEV","register","YearlyFinancialChart","transactions","_s","chart","setChart","selectedDate","setSelectedDate","Date","aggregatedData","setAggregatedData","labels","data","minLoss","maxIncome","length","aggregateData","destroy","ctx","document","getElementById","getContext","newChart","type","datasets","label","backgroundColor","map","amount","borderColor","borderWidth","options","scales","x","title","display","text","y","beginAtZero","suggestedMin","suggestedMax","aggregatedByYear","reduce","result","transaction","date","timestamp","formattedYear","existingIndex","findIndex","push","Math","max","min","handleDateChange","className","children","selected","onChange","dateFormat","showYearPicker","fileName","_jsxFileName","lineNumber","columnNumber","id","width","height","_c","$RefreshReg$"],"sources":["/Users/luisjorge/code/Flatiron-Phase-2/16-Phase-2-Project/titan-capital-financial/src/components/YearlyFinancialChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Chart, registerables } from 'chart.js/auto';\nimport { format } from 'date-fns';\n\n// Register necessary plugins\nChart.register(...registerables);\n\nconst YearlyFinancialChart = ({ transactions }) => {\n  const [chart, setChart] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [aggregatedData, setAggregatedData] = useState({ labels: [], data: [], minLoss: 0, maxIncome: 0 });\n\n  useEffect(() => {\n    if (transactions.length > 0) {\n      const data = aggregateData(transactions);\n      setAggregatedData(data);\n    }\n  }, [transactions, selectedDate]);\n\n  useEffect(() => {\n    // Check if there's an existing chart\n    if (chart) {\n      // Destroy the existing chart\n      chart.destroy();\n    }\n\n    if (aggregatedData.labels.length > 0) {\n      const ctx = document.getElementById('yearlyFinancialChart').getContext('2d');\n      const newChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: aggregatedData.labels,\n          datasets: [\n            {\n              label: 'Yearly Transactions',\n              data: aggregatedData.data,\n              backgroundColor: aggregatedData.data.map((amount) => (amount >= 0 ? 'rgba(75, 192, 192, 0.2)' : 'rgba(255, 99, 132, 0.2)')),\n              borderColor: aggregatedData.data.map((amount) => (amount >= 0 ? 'rgba(75, 192, 192, 1)' : 'rgba(255, 99, 132, 1)')),\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: {\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Year',\n              },\n            },\n            y: {\n              beginAtZero: true,\n              suggestedMin: aggregatedData.minLoss,\n              suggestedMax: aggregatedData.maxIncome,\n              title: {\n                display: true,\n                text: 'Transaction Amount',\n              },\n            },\n          },\n        },\n      });\n\n      setChart(newChart);\n    }\n  }, [aggregatedData]);\n\n  const aggregateData = (data) => {\n    const aggregatedByYear = data.reduce(\n      (result, transaction) => {\n        const date = new Date(transaction.timestamp);\n        const formattedYear = format(date, 'yyyy');\n\n        const existingIndex = result.labels.findIndex((label) => label === formattedYear);\n\n        if (existingIndex !== -1) {\n          result.data[existingIndex] += transaction.amount;\n        } else {\n          result.labels.push(formattedYear);\n          result.data.push(transaction.amount);\n        }\n\n        // Update the maximum income and minimum loss\n        if (transaction.amount >= 0) {\n          result.maxIncome = Math.max(result.maxIncome, transaction.amount);\n        } else {\n          result.minLoss = Math.min(result.minLoss, transaction.amount);\n        }\n\n        return result;\n      },\n      { labels: [], data: [], maxIncome: 0, minLoss: 0 }\n    );\n\n    return aggregatedByYear;\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  return (\n    <div className='financialChart'>\n      <DatePicker className=\"financialChart__datePicker\" selected={selectedDate} onChange={handleDateChange} dateFormat=\"yyyy\" showYearPicker />\n      <canvas id=\"yearlyFinancialChart\" width=\"800\" height=\"400\"></canvas>\n    </div>\n  );\n};\n\nexport default YearlyFinancialChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}