{"ast":null,"code":"var _jsxFileName = \"/Users/luisjorge/code/Flatiron-Phase-2/16-Phase-2-Project/titan-capital-financial/src/components/FinancialTransactionChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Chart, registerables } from 'chart.js/auto'; // Import 'Chart' and 'registerables'\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { format } from 'date-fns';\n\n// Register necessary plugins\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nChartDataLabels(Chart); // Register ChartDataLabels\n\nconst FinancialTransactionChart = ({\n  transactions\n}) => {\n  _s();\n  const [chart, setChart] = useState(null);\n  useEffect(() => {\n    if (transactions.length > 0) {\n      const aggregatedData = aggregateData(transactions);\n      const ctx = document.getElementById('financialChart').getContext('2d');\n      const newChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: aggregatedData.labels,\n          datasets: [{\n            label: 'Total Transactions',\n            data: aggregatedData.data,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 2,\n            pointRadius: 4,\n            pointBackgroundColor: 'rgba(75, 192, 192, 1)',\n            pointBorderColor: '#fff',\n            pointHoverRadius: 6,\n            pointHoverBackgroundColor: 'rgba(75, 192, 192, 1)'\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              type: 'time',\n              time: {\n                unit: 'day'\n              },\n              title: {\n                display: true,\n                text: 'Date'\n              }\n            },\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: 'Transaction Amount'\n              }\n            }\n          }\n        }\n      });\n      setChart(newChart);\n    }\n  }, [transactions]);\n  const aggregateData = data => {\n    const aggregatedByDay = data.reduce((result, transaction) => {\n      const date = new Date(transaction.timestamp);\n      const formattedDate = format(date, 'MM/dd/yyyy');\n      const existingIndex = result.labels.findIndex(label => label === formattedDate);\n      if (existingIndex !== -1) {\n        result.data[existingIndex] += transaction.amount;\n      } else {\n        result.labels.push(formattedDate);\n        result.data.push(transaction.amount);\n      }\n      return result;\n    }, {\n      labels: [],\n      data: []\n    });\n    return aggregatedByDay;\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    id: \"financialChart\",\n    width: \"800\",\n    height: \"400\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 10\n  }, this);\n};\n_s(FinancialTransactionChart, \"emiLVeZDkQQszKK8qVrGGhsfzT4=\");\n_c = FinancialTransactionChart;\nexport default FinancialTransactionChart;\nvar _c;\n$RefreshReg$(_c, \"FinancialTransactionChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","registerables","ChartDataLabels","format","jsxDEV","_jsxDEV","register","FinancialTransactionChart","transactions","_s","chart","setChart","length","aggregatedData","aggregateData","ctx","document","getElementById","getContext","newChart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","pointRadius","pointBackgroundColor","pointBorderColor","pointHoverRadius","pointHoverBackgroundColor","options","scales","x","time","unit","title","display","text","y","beginAtZero","aggregatedByDay","reduce","result","transaction","date","Date","timestamp","formattedDate","existingIndex","findIndex","amount","push","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/luisjorge/code/Flatiron-Phase-2/16-Phase-2-Project/titan-capital-financial/src/components/FinancialTransactionChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Chart, registerables } from 'chart.js/auto'; // Import 'Chart' and 'registerables'\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { format } from 'date-fns';\n\n// Register necessary plugins\nChart.register(...registerables);\nChartDataLabels(Chart); // Register ChartDataLabels\n\nconst FinancialTransactionChart = ({ transactions }) => {\n  const [chart, setChart] = useState(null);\n\n  useEffect(() => {\n    if (transactions.length > 0) {\n      const aggregatedData = aggregateData(transactions);\n\n      const ctx = document.getElementById('financialChart').getContext('2d');\n      const newChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: aggregatedData.labels,\n          datasets: [\n            {\n              label: 'Total Transactions',\n              data: aggregatedData.data,\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 2,\n              pointRadius: 4,\n              pointBackgroundColor: 'rgba(75, 192, 192, 1)',\n              pointBorderColor: '#fff',\n              pointHoverRadius: 6,\n              pointHoverBackgroundColor: 'rgba(75, 192, 192, 1)',\n            },\n          ],\n        },\n        options: {\n          scales: {\n            x: {\n              type: 'time',\n              time: {\n                unit: 'day',\n              },\n              title: {\n                display: true,\n                text: 'Date',\n              },\n            },\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: 'Transaction Amount',\n              },\n            },\n          },\n        },\n      });\n\n      setChart(newChart);\n    }\n  }, [transactions]);\n\n  const aggregateData = (data) => {\n    const aggregatedByDay = data.reduce(\n      (result, transaction) => {\n        const date = new Date(transaction.timestamp);\n        const formattedDate = format(date, 'MM/dd/yyyy');\n        const existingIndex = result.labels.findIndex((label) => label === formattedDate);\n\n        if (existingIndex !== -1) {\n          result.data[existingIndex] += transaction.amount;\n        } else {\n          result.labels.push(formattedDate);\n          result.data.push(transaction.amount);\n        }\n\n        return result;\n      },\n      { labels: [], data: [] }\n    );\n\n    return aggregatedByDay;\n  };\n\n  return <canvas id=\"financialChart\" width=\"800\" height=\"400\"></canvas>;\n};\n\nexport default FinancialTransactionChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}