{"ast":null,"code":"var _jsxFileName = \"/Users/luisjorge/code/Flatiron-Phase-2/16-Phase-2-Project/titan-capital-financial/src/components/MonthlyFinancialChart.js\",\n  _s = $RefreshSig$();\n// MonthlyFinancialChart.js\nimport React, { useEffect, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Chart, registerables } from 'chart.js/auto';\nimport { format } from 'date-fns';\n\n// Register necessary plugins\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst MonthlyFinancialChart = ({\n  transactions\n}) => {\n  _s();\n  const [chart, setChart] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  useEffect(() => {\n    // Check if there's an existing chart\n    if (chart) {\n      // Destroy the existing chart\n      chart.destroy();\n    }\n    if (transactions.length > 0) {\n      const aggregatedData = aggregateData(transactions);\n      const ctx = document.getElementById('monthlyFinancialChart').getContext('2d');\n      const newChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: aggregatedData.labels,\n          datasets: [{\n            label: 'Monthly Transactions',\n            data: aggregatedData.data,\n            backgroundColor: aggregatedData.data.map(amount => amount >= 0 ? 'rgba(75, 192, 192, 0.2)' : 'rgba(255, 99, 132, 0.2)'),\n            borderColor: aggregatedData.data.map(amount => amount >= 0 ? 'rgba(75, 192, 192, 1)' : 'rgba(255, 99, 132, 1)'),\n            borderWidth: 1\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Month'\n              }\n            },\n            y: {\n              beginAtZero: true,\n              suggestedMin: aggregatedData.minLoss,\n              suggestedMax: aggregatedData.maxIncome,\n              title: {\n                display: true,\n                text: 'Transaction Amount'\n              }\n            }\n          }\n        }\n      });\n      setChart(newChart);\n    }\n  }, [transactions, selectedDate]);\n  const aggregateData = data => {\n    // ... Same aggregateData logic as before\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: selectedDate,\n      onChange: handleDateChange,\n      dateFormat: \"MM/yyyy\",\n      showMonthYearPicker: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"monthlyFinancialChart\",\n      width: \"800\",\n      height: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(MonthlyFinancialChart, \"p1f5IXVlc6TPChPz2M4FcRug1a4=\");\n_c = MonthlyFinancialChart;\nexport default MonthlyFinancialChart;\nvar _c;\n$RefreshReg$(_c, \"MonthlyFinancialChart\");","map":{"version":3,"names":["React","useEffect","useState","DatePicker","Chart","registerables","format","jsxDEV","_jsxDEV","register","MonthlyFinancialChart","transactions","_s","chart","setChart","selectedDate","setSelectedDate","Date","destroy","length","aggregatedData","aggregateData","ctx","document","getElementById","getContext","newChart","type","data","labels","datasets","label","backgroundColor","map","amount","borderColor","borderWidth","options","scales","x","title","display","text","y","beginAtZero","suggestedMin","minLoss","suggestedMax","maxIncome","handleDateChange","date","children","selected","onChange","dateFormat","showMonthYearPicker","fileName","_jsxFileName","lineNumber","columnNumber","id","width","height","_c","$RefreshReg$"],"sources":["/Users/luisjorge/code/Flatiron-Phase-2/16-Phase-2-Project/titan-capital-financial/src/components/MonthlyFinancialChart.js"],"sourcesContent":["// MonthlyFinancialChart.js\nimport React, { useEffect, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Chart, registerables } from 'chart.js/auto';\nimport { format } from 'date-fns';\n\n// Register necessary plugins\nChart.register(...registerables);\n\nconst MonthlyFinancialChart = ({ transactions }) => {\n  const [chart, setChart] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  useEffect(() => {\n    // Check if there's an existing chart\n    if (chart) {\n      // Destroy the existing chart\n      chart.destroy();\n    }\n\n    if (transactions.length > 0) {\n      const aggregatedData = aggregateData(transactions);\n\n      const ctx = document.getElementById('monthlyFinancialChart').getContext('2d');\n      const newChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: aggregatedData.labels,\n          datasets: [\n            {\n              label: 'Monthly Transactions',\n              data: aggregatedData.data,\n              backgroundColor: aggregatedData.data.map((amount) => (amount >= 0 ? 'rgba(75, 192, 192, 0.2)' : 'rgba(255, 99, 132, 0.2)')),\n              borderColor: aggregatedData.data.map((amount) => (amount >= 0 ? 'rgba(75, 192, 192, 1)' : 'rgba(255, 99, 132, 1)')),\n              borderWidth: 1,\n            },\n          ],\n        },\n        options: {\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Month',\n              },\n            },\n            y: {\n              beginAtZero: true,\n              suggestedMin: aggregatedData.minLoss,\n              suggestedMax: aggregatedData.maxIncome,\n              title: {\n                display: true,\n                text: 'Transaction Amount',\n              },\n            },\n          },\n        },\n      });\n\n      setChart(newChart);\n    }\n  }, [transactions, selectedDate]);\n\n  const aggregateData = (data) => {\n    // ... Same aggregateData logic as before\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  return (\n    <div>\n      <DatePicker selected={selectedDate} onChange={handleDateChange} dateFormat=\"MM/yyyy\" showMonthYearPicker />\n      <canvas id=\"monthlyFinancialChart\" width=\"800\" height=\"400\"></canvas>\n    </div>\n  );\n};\n\nexport default MonthlyFinancialChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}