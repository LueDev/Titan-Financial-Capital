{"ast":null,"code":"var _jsxFileName = \"/Users/luisjorge/code/Flatiron-Phase-2/16-Phase-2-Project/titan-capital-financial/src/components/FinancialTransactionChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Chart, registerables } from 'chart.js/auto';\nimport { format, startOfWeek, endOfWeek, startOfMonth, endOfMonth } from 'date-fns';\n\n// Register necessary plugins\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nconst FinancialTransactionChart = ({\n  transactions\n}) => {\n  _s();\n  const [chart, setChart] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  useEffect(() => {\n    if (transactions.length > 0) {\n      const aggregatedData = aggregateData(transactions);\n      const ctx = document.getElementById('financialChart').getContext('2d');\n      const newChart = new Chart(ctx, {\n        // ... Your chart configuration\n      });\n      setChart(newChart);\n    }\n  }, [transactions, selectedDate]);\n  const aggregateData = data => {\n    // ... Your data aggregation logic based on selectedDate\n  };\n  const handleDateChange = date => {\n    setSelectedDate(date);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: selectedDate,\n      onChange: handleDateChange,\n      dateFormat: \"MM/yyyy\",\n      showMonthYearPicker: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"financialChart\",\n      width: \"800\",\n      height: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(FinancialTransactionChart, \"p1f5IXVlc6TPChPz2M4FcRug1a4=\");\n_c = FinancialTransactionChart;\nexport default FinancialTransactionChart;\nvar _c;\n$RefreshReg$(_c, \"FinancialTransactionChart\");","map":{"version":3,"names":["React","useEffect","useState","DatePicker","Chart","registerables","format","startOfWeek","endOfWeek","startOfMonth","endOfMonth","jsxDEV","_jsxDEV","register","FinancialTransactionChart","transactions","_s","chart","setChart","selectedDate","setSelectedDate","Date","length","aggregatedData","aggregateData","ctx","document","getElementById","getContext","newChart","data","handleDateChange","date","children","selected","onChange","dateFormat","showMonthYearPicker","fileName","_jsxFileName","lineNumber","columnNumber","id","width","height","_c","$RefreshReg$"],"sources":["/Users/luisjorge/code/Flatiron-Phase-2/16-Phase-2-Project/titan-capital-financial/src/components/FinancialTransactionChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { Chart, registerables } from 'chart.js/auto';\nimport { format, startOfWeek, endOfWeek, startOfMonth, endOfMonth } from 'date-fns';\n\n// Register necessary plugins\nChart.register(...registerables);\n\nconst FinancialTransactionChart = ({ transactions }) => {\n  const [chart, setChart] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  useEffect(() => {\n    if (transactions.length > 0) {\n      const aggregatedData = aggregateData(transactions);\n\n      const ctx = document.getElementById('financialChart').getContext('2d');\n      const newChart = new Chart(ctx, {\n        // ... Your chart configuration\n      });\n\n      setChart(newChart);\n    }\n  }, [transactions, selectedDate]);\n\n  const aggregateData = (data) => {\n    // ... Your data aggregation logic based on selectedDate\n  };\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  return (\n    <div>\n      <DatePicker selected={selectedDate} onChange={handleDateChange} dateFormat=\"MM/yyyy\" showMonthYearPicker />\n      <canvas id=\"financialChart\" width=\"800\" height=\"400\"></canvas>\n    </div>\n  );\n};\n\nexport default FinancialTransactionChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,kBAAkB;AACzC,OAAO,4CAA4C;AACnD,SAASC,KAAK,EAAEC,aAAa,QAAQ,eAAe;AACpD,SAASC,MAAM,EAAEC,WAAW,EAAEC,SAAS,EAAEC,YAAY,EAAEC,UAAU,QAAQ,UAAU;;AAEnF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAR,KAAK,CAACS,QAAQ,CAAC,GAAGR,aAAa,CAAC;AAEhC,MAAMS,yBAAyB,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,IAAImB,IAAI,CAAC,CAAC,CAAC;EAE5DpB,SAAS,CAAC,MAAM;IACd,IAAIc,YAAY,CAACO,MAAM,GAAG,CAAC,EAAE;MAC3B,MAAMC,cAAc,GAAGC,aAAa,CAACT,YAAY,CAAC;MAElD,MAAMU,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;MACtE,MAAMC,QAAQ,GAAG,IAAIzB,KAAK,CAACqB,GAAG,EAAE;QAC9B;MAAA,CACD,CAAC;MAEFP,QAAQ,CAACW,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACd,YAAY,EAAEI,YAAY,CAAC,CAAC;EAEhC,MAAMK,aAAa,GAAIM,IAAI,IAAK;IAC9B;EAAA,CACD;EAED,MAAMC,gBAAgB,GAAIC,IAAI,IAAK;IACjCZ,eAAe,CAACY,IAAI,CAAC;EACvB,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,gBACErB,OAAA,CAACT,UAAU;MAAC+B,QAAQ,EAAEf,YAAa;MAACgB,QAAQ,EAAEJ,gBAAiB;MAACK,UAAU,EAAC,SAAS;MAACC,mBAAmB;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3G7B,OAAA;MAAQ8B,EAAE,EAAC,gBAAgB;MAACC,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAACzB,EAAA,CA/BIF,yBAAyB;AAAA+B,EAAA,GAAzB/B,yBAAyB;AAiC/B,eAAeA,yBAAyB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}