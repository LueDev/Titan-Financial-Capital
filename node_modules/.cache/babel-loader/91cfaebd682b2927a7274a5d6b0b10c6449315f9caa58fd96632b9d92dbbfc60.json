{"ast":null,"code":"var _jsxFileName = \"/Users/luisjorge/code/Flatiron-Phase-2/16-Phase-2-Project/titan-capital-financial/src/components/FinancialTransactionChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Chart, registerables } from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { format, startOfMonth, endOfMonth } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nChartDataLabels(Chart);\nconst FinancialTransactionChart = ({\n  transactions\n}) => {\n  _s();\n  const [chart, setChart] = useState(null);\n  const [selectedMonth, setSelectedMonth] = useState(new Date());\n  useEffect(() => {\n    if (chart) {\n      chart.destroy();\n    }\n    if (transactions.length > 0) {\n      const aggregatedData = aggregateData(transactions);\n      const ctx = document.getElementById('financialChart').getContext('2d');\n      const newChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: aggregatedData.labels,\n          datasets: [{\n            label: 'Total Transactions',\n            data: aggregatedData.data,\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 2\n          }]\n        },\n        options: {\n          scales: {\n            x: {\n              type: 'time',\n              time: {\n                unit: 'day',\n                tooltipFormat: 'MM/DD/YYYY'\n              },\n              title: {\n                display: true,\n                text: 'Date'\n              }\n            },\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: 'Transaction Amount'\n              }\n            }\n          }\n        }\n      });\n      setChart(newChart);\n    }\n  }, [transactions, selectedMonth]);\n  const aggregateData = data => {\n    const filteredData = data.filter(transaction => {\n      const transactionDate = new Date(transaction.timestamp);\n      return transactionDate.getMonth() === selectedMonth.getMonth() && transactionDate.getFullYear() === selectedMonth.getFullYear();\n    });\n    const aggregatedByDay = filteredData.reduce((result, transaction) => {\n      const date = new Date(transaction.timestamp);\n      const formattedDate = format(date, 'MM/DD/YYYY');\n      const existingIndex = result.labels.findIndex(label => label === formattedDate);\n      if (existingIndex !== -1) {\n        result.data[existingIndex] += transaction.amount;\n      } else {\n        result.labels.push(formattedDate);\n        result.data.push(transaction.amount);\n      }\n      return result;\n    }, {\n      labels: [],\n      data: []\n    });\n    return aggregatedByDay;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"month\",\n      value: format(selectedMonth, 'yyyy-MM'),\n      onChange: e => setSelectedMonth(new Date(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"financialChart\",\n      width: \"800\",\n      height: \"400\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(FinancialTransactionChart, \"CFCpqziUMOEMIPSrYlwycrCrYmA=\");\n_c = FinancialTransactionChart;\nexport default FinancialTransactionChart;\nvar _c;\n$RefreshReg$(_c, \"FinancialTransactionChart\");","map":{"version":3,"names":["React","useEffect","useState","Chart","registerables","ChartDataLabels","format","startOfMonth","endOfMonth","jsxDEV","_jsxDEV","register","FinancialTransactionChart","transactions","_s","chart","setChart","selectedMonth","setSelectedMonth","Date","destroy","length","aggregatedData","aggregateData","ctx","document","getElementById","getContext","newChart","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","scales","x","time","unit","tooltipFormat","title","display","text","y","beginAtZero","filteredData","filter","transaction","transactionDate","timestamp","getMonth","getFullYear","aggregatedByDay","reduce","result","date","formattedDate","existingIndex","findIndex","amount","push","children","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","id","width","height","_c","$RefreshReg$"],"sources":["/Users/luisjorge/code/Flatiron-Phase-2/16-Phase-2-Project/titan-capital-financial/src/components/FinancialTransactionChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Chart, registerables } from 'chart.js/auto';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { format, startOfMonth, endOfMonth } from 'date-fns';\n\nChart.register(...registerables);\nChartDataLabels(Chart);\n\nconst FinancialTransactionChart = ({ transactions }) => {\n  const [chart, setChart] = useState(null);\n  const [selectedMonth, setSelectedMonth] = useState(new Date());\n\n  useEffect(() => {\n    if (chart) {\n      chart.destroy();\n    }\n\n    if (transactions.length > 0) {\n      const aggregatedData = aggregateData(transactions);\n\n      const ctx = document.getElementById('financialChart').getContext('2d');\n      const newChart = new Chart(ctx, {\n        type: 'bar',\n        data: {\n          labels: aggregatedData.labels,\n          datasets: [\n            {\n              label: 'Total Transactions',\n              data: aggregatedData.data,\n              backgroundColor: 'rgba(75, 192, 192, 0.2)',\n              borderColor: 'rgba(75, 192, 192, 1)',\n              borderWidth: 2,\n            },\n          ],\n        },\n        options: {\n          scales: {\n            x: {\n              type: 'time',\n              time: {\n                unit: 'day',\n                tooltipFormat: 'MM/DD/YYYY',\n              },\n              title: {\n                display: true,\n                text: 'Date',\n              },\n            },\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: 'Transaction Amount',\n              },\n            },\n          },\n        },\n      });\n\n      setChart(newChart);\n    }\n  }, [transactions, selectedMonth]);\n\n  const aggregateData = (data) => {\n    const filteredData = data.filter((transaction) => {\n      const transactionDate = new Date(transaction.timestamp);\n      return (\n        transactionDate.getMonth() === selectedMonth.getMonth() &&\n        transactionDate.getFullYear() === selectedMonth.getFullYear()\n      );\n    });\n  \n    const aggregatedByDay = filteredData.reduce(\n      (result, transaction) => {\n        const date = new Date(transaction.timestamp);\n        const formattedDate = format(date, 'MM/DD/YYYY');\n        const existingIndex = result.labels.findIndex((label) => label === formattedDate);\n  \n        if (existingIndex !== -1) {\n          result.data[existingIndex] += transaction.amount;\n        } else {\n          result.labels.push(formattedDate);\n          result.data.push(transaction.amount);\n        }\n  \n        return result;\n      },\n      { labels: [], data: [] }\n    );\n  \n    return aggregatedByDay;\n  };\n  \n\n  return (\n    <div>\n      <input\n        type=\"month\"\n        value={format(selectedMonth, 'yyyy-MM')}\n        onChange={(e) => setSelectedMonth(new Date(e.target.value))}\n      />\n      <canvas id=\"financialChart\" width=\"800\" height=\"400\"></canvas>\n    </div>\n  );\n};\n\nexport default FinancialTransactionChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}